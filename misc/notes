;; -*- mode: outline; outline-regexp: " *[-\+]"; indent-tabs-mode: nil -*-

^c^d hide subtree
^c^s show subtree

- Element
 - each
 - locate with pattern)

- rdoc
 - --coverage-report for coverage (does not generate docs)
 - rdoc --main README.md --title Ox --exclude extconf.rb lib ext/ox README.md

- todo
 - cache
  - Oj vs semi-tree
   - slot - split to 16
   - if no others on slot then make it the one for key
    - key is limited to x chars
    - maybe go in pairs of 4 bits
    - be able to GC or expire entries
    - what is optimum split? 16, 4, 2?
    - instead of hash, just follow index
    - maybe just common or case insensitive, outside that no cache
    - or allow multiple on slots for collisions of case and just strcmp, rare to have
    - slot with union of key and slots
     -
     Slot
       union {
         struct {
           uint8_t klen;
           char key[31];
         };
         Slot slots[4];
       };
       VALUE value; // if Qundef then has sub-slots
     need linked list but that needs both key and value
      possible *next
      maybe slots only have sub-slots and linked key/values
      KeyValue {
        KeyValue *next
        VALUE value
        uint8_t klen
        char key[31]
      }
      Slot {
        Slot slots[4]
        KeyValue kvs
      }
    size 40*3+48 = 168 or if 64*8 + 8 + 48 = 568
    if 2 ssub-slots
     5 if-thens size 24*5+48 = 168
      if full 8 then 24*8+40 = 232

     early match
      if has value then strcmp
       if no match then split and move key down
     mask and shift slots 4x4x4 - 64 slots at 3rd level
      key is 31 max
      3 if-thens
      1 char is 32+8 = 40 * 3 = 120
     or 32 and fewer if-then
      key can be longer (255)
      one check per char
      1 char is 64*8+8 = 520

 - cache change to Oj cache
  - need something that keeps track of global caches
   - expect small number so a linked list should be fine.

  - start with sax parser (str2sym)
  - add cache ref to pinfo based on encoding type, default to utf8 or what ever is set as default option
   - if not defined then lookup

  - optional
   - attrs (name (sym or string) and value (cache_strings))
   - element names (string)
   - values/text (cache_strings: int)

 - use bulk has set for add_element in gen_load

 - is hash_load unmark() needed?


 - taint deprecated
  - implement a marked array or linked list in pinfo
   - not super efficient but it should work
   - search from tail
   - grow if needed. start with none and grow as needed in blocks of ??

 - HTML (5) builder
  - should be correct for all elements
  - pedantic

 - add hints and overaly to parse.c

 - continuous sax parser
  - parse input stream and continue waiting for next one






- add UTF-16 support
U+0000..U+D7FF, U+E000..U+EFFF  00000xxxxxxxxxxxxxxxx  xxxxxxxxxxxxxxxx
U+10000..U+10FFFF               uuuuuxxxxxxyyyyyyyyyy  110110wwwwxxxxxx 110111yyyyyyyyyy (where uuuuu = wwww + 1)


- hints
xmllint --valid --noout --dtdvalid ../misc/ox.dtd --debug sample.xml

#rsync -vru --exclude ".*" --exclude "*~" --exclude "#*" --exclude misc --exclude "*.o" ~/code/ox/ ~/git/ox
rsync -vrI --exclude ".*" --exclude "*~" --exclude "#*" --exclude misc --exclude "*.o" ~/code/ox/ ~/git/ox
rsync -vrI --exclude ".*" --exclude "*~" --exclude "#*" --exclude misc --exclude "*.o" ~/git/ox/ ~/code/ox
